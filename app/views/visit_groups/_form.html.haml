-# Copyright Â© 2011-2019 MUSC Foundation for Research Development~
-# All rights reserved.~

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:~

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.~

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following~
-# disclaimer in the documentation and/or other materials provided with the distribution.~

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products~
-# derived from this software without specific prior written permission.~

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,~
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT~
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL~
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS~
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR~
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.~

.modal-dialog{ role: 'document' }
  .modal-content
    = form_for visit_group, remote: true do |f|
      = f.hidden_field :arm_id
      = hidden_field_tag :arm_id, visit_group.arm_id
      = hidden_field_tag :srid, service_request.try(:id)
      = hidden_field_tag :ssrid, sub_service_request.try(:id)
      = hidden_field_tag :tab, tab
      = hidden_field_tag :page, page
      - pages.each do |arm_id, page|
        = hidden_field_tag "pages[#{arm_id}]", page
      .modal-header
        %h3.modal-title
          = t("visit_groups.#{action_name}")
        %button.close{ type: 'button', data: { dismiss: 'modal' }, aria: { label: t('actions.close') } }
          %span{ aria: { hidden: 'true' } } &times;
      .modal-body
        .form-group
          = f.label :name, class: 'required'
          = f.text_field :name, class: 'form-control'
        .form-row
          .form-group.col-4
            = f.label :window_before, class: 'required'
            = f.number_field :window_before, class: 'form-control', min: 0
          .form-group.col-4
            - min, max = move_visit_group_boundaries(visit_group, arm)
            - disable = min == max && min.present? # Disable if there can only be one day to choose from and the user did not select the blank option
            = f.label :day, class: 'required'
            = f.number_field :day, class: 'form-control', min: min, max: max, value: disable ? min : visit_group.day, readonly: disable
            - if min || max
              %small.form-text.text-muted
                - if min
                  = t('constants.min', min: min)
                - if max
                  = t('constants.max', max: max)
              - if min == max && (visit_group.new_record? || visit_group.position_changed?)
                %small.form-text.text-warning
                  = t('visit_groups.form.move_note')
          .form-group.col-4
            = f.label :window_after, class: 'required'
            = f.number_field :window_after, class: 'form-control', min: 0
        .form-group
          = f.label :position, class: 'required'
          = f.select :position, visit_position_options(arm, visit_group), { include_blank: true }, class: 'selectpicker', disabled: visit_group.nil?
      .modal-footer
        - if action_name == 'edit'
          = delete_visit_group_button(visit_group, srid: service_request.try(:id), ssrid: sub_service_request.try(:id), tab: tab, page: page, pages: pages)
        %button.btn.btn-secondary{ type: 'button', data: { dismiss: 'modal' } }
          = t('actions.close')
        = f.submit t('actions.submit'), class: 'btn btn-primary'
